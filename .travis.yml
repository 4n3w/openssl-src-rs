language: rust
dist: trusty
sudo: false

matrix:
  include:
    - env: TARGET=arm-linux-androideabi
      before_install:
        - curl -O https://dl.google.com/android/repository/android-ndk-r15b-linux-x86_64.zip
        - unzip -q android-ndk-r15b-linux-x86_64.zip
        - android-ndk-r15b/build/tools/make_standalone_toolchain.py
              --unified-headers
              --install-dir $HOME/android/ndk
              --arch arm
              --api 24
        - export PATH=$PATH:$HOME/android/ndk/bin
    - env: TARGET=aarch64-linux-android
      before_install:
        - curl -O https://dl.google.com/android/repository/android-ndk-r15b-linux-x86_64.zip
        - unzip -q android-ndk-r15b-linux-x86_64.zip
        - android-ndk-r15b/build/tools/make_standalone_toolchain.py
              --unified-headers
              --install-dir $HOME/android/ndk
              --arch arm64
              --api 24
        - export PATH=$PATH:$HOME/android/ndk/bin
    - env: TARGET=i686-linux-android
      before_install:
        - curl -O https://dl.google.com/android/repository/android-ndk-r15b-linux-x86_64.zip
        - unzip -q android-ndk-r15b-linux-x86_64.zip
        - android-ndk-r15b/build/tools/make_standalone_toolchain.py
              --unified-headers
              --install-dir $HOME/android/ndk
              --arch x86
              --api 24
        - export PATH=$PATH:$HOME/android/ndk/bin
    - env: TARGET=x86_64-linux-android
      before_install:
        - curl -O https://dl.google.com/android/repository/android-ndk-r15b-linux-x86_64.zip
        - unzip -q android-ndk-r15b-linux-x86_64.zip
        - android-ndk-r15b/build/tools/make_standalone_toolchain.py
              --unified-headers
              --install-dir $HOME/android/ndk
              --arch x86_64
              --api 24
        - export PATH=$PATH:$HOME/android/ndk/bin

    - os: osx
      env: TARGET=x86_64-apple-darwin NO_ADD=1
    - os: osx
      env: TARGET=i686-apple-darwin

    - rust: stable
      env: TARGET=x86_64-unknown-linux-gnu NO_ADD=1
    - env: TARGET=i686-unknown-linux-gnu
      addons:
        apt:
          packages:
            - gcc-multilib
    - env: TARGET=arm-unknown-linux-gnueabi
      addons:
        apt:
          packages:
            - gcc-arm-linux-gnueabi
            - libc6-dev-armel-cross
    - env: TARGET=aarch64-unknown-linux-gnu
      addons:
        apt:
          packages:
            - gcc-aarch64-linux-gnu
            - libc6-dev-arm64-cross
    - env: TARGET=x86_64-unknown-linux-musl
      addons:
        apt:
          packages:
            - musl-tools
    - env: TARGET=x86_64-pc-windows-gnu
      addons:
        apt:
          packages:
            - gcc-mingw-w64-x86-64
    - env: TARGET=i686-pc-windows-gnu
      addons:
        apt:
          packages:
            - gcc-mingw-w64-i686

    - rust: beta
      env: TARGET=x86_64-unknown-linux-gnu NO_ADD=1
    - rust: nightly
      env: TARGET=x86_64-unknown-linux-gnu NO_ADD=1

install:
  - if [ -z "$NO_ADD" ]; then rustup target add $TARGET; fi

script:
  - cargo build --manifest-path testcrate/Cargo.toml --target $TARGET

notifications:
  email:
    on_success: never
