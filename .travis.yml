language: rust
dist: trusty
sudo: false

matrix:
  include:
    - env: TARGET_TO_TEST=arm-linux-androideabi
      before_install:
        - curl -O https://dl.google.com/android/repository/android-ndk-r15b-linux-x86_64.zip
        - unzip -q android-ndk-r15b-linux-x86_64.zip
        - android-ndk-r15b/build/tools/make_standalone_toolchain.py
              --unified-headers
              --install-dir /android/ndk
              --arch arm
              --api 24
        - export PATH=$PATH:/android/ndk/bin
    - os: osx
    - os: osx
      env: TARGET_TO_TEST=i686-apple-darwin

    - rust: stable
    - env: TARGET_TO_TEST=i686-unknown-linux-gnu
      addons:
        apt:
          packages:
            - gcc-multilib
    - env: TARGET_TO_TEST=arm-unknown-linux-gnueabi
      addons:
        apt:
          packages:
            - gcc-arm-linux-gnueabi
            - libc6-dev-armel-cross
    - env: TARGET_TO_TEST=aarch64-unknown-linux-gnu
      addons:
        apt:
          packages:
            - gcc-aarch64-linux-gnu
            - libc6-dev-arm64-cross
    - env: TARGET_TO_TEST=x86_64-pc-windows-gnu
      addons:
        apt:
          packages:
            - gcc-mingw-w64-x86-64
    - env: TARGET_TO_TEST=i686-pc-windows-gnu
      addons:
        apt:
          packages:
            - gcc-mingw-w64-i686

    - rust: beta
    - rust: nightly

install:
  - if [ ! -z "$TARGET_TO_TEST" ]; then rustup target add $TARGET_TO_TEST; fi

script:
  - cargo test

notifications:
  email:
    on_success: never
